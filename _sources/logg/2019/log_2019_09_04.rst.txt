Onsdag 04.09 2019
+++++++++++++++++

Mye knoting med å produsere ok plott av AO. 

Sphinx
''''''

Styrte en del med å få til å lage tekstbokser i Sphinx. Løsning: Bruke
*admonitions*, og definere innstillinger (farge etc) i *conf.py*. Dokumentert i
`software/sphinx <../../sw/sw_content/frequently_used/sphinx.html>`_.

.. admonition:: Her er et eksempel

    Dette er eksemplet.

oyweb
''''''

Skrevet side om `Arctic Oscillation <../../sci_notes/arctic/background/arctic_oscillation.html>`_, og begynt å legge til sider fra *refnotes*
(som jeg akter å fase ut). Har lagt over alt under *software* - det gjenstår å
overføre PO/statistikk etc, men har satt opp strukturen.

IFREMER sea-ice drift
'''''''''''''''''''''

Lastet ned produktet (3-day merged product *merged-ascat-A-B-ssmi*). Vet ingen
måte å bruke ftp med *netCDF4*, så jeg lastet det ned (script:
*dl_SIC_IFREMER.sh*). Data ble lagret i
*code/processing_and_data/sea_ice_drift/ftp.ifremer.fr*. Full nedlasting tar ca
20 min. Flyttet og unzippet
manuelt (det enkle er ofte det beste, i hvert fall det raskeste..). Nå lagret i
*atwain/data/other/sea_ice_drift/ifremer/3_day_missing_values_filled/*.


Skript *show_structure_and_grid_ifremer.py* for å undersøke data. Daglige filer
med 3-dag average. Hver har dimension *time* av lengde 1. Data på et enkelt
(lat, lon) grid.

Grid-spacing skal være 62.5 km x 62.5 km.

Rotating vectors 
''''''''''''''''

*u* and *v* in this dataset should be the actual zonal/meridional drift
components. The grid does not align with parallels/meridians, so I need to
rotate the vectors.

In order to find the angle :math:`\theta` that the *along-coordinate* component
(which we need for the calculations) makes with a westward vector, I compute the
angle (:math:`arctan(dy, dx)`) of a line between two surrounding points (i-1,
i+1). This gives a good *approximation* of the angle (see below), but it is
**not** exact. Since I'll likely have to do this calculation over anyways (see below), I'm
going to stick with this method for the present purpose of checking the
usability of the dataset.
  
.. figure:: /files/ifremer_grid_rotate.png
    :scale: 50

    Map showing computed local grid direction using the simplified approach above.

.. warning::

    Not sure if computing the flux into a grid placed between grid points makes
    sense - it is probably more reasonable to place the border along a line of
    grid points. This requires a little more subtlety than just averaging (since
    the contribution of the end poiint is 1/2) but should still be relatively easy